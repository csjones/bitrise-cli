{
    "openapi": "3.0.1",
    "info": {
        "title": "Bitrise API",
        "description": "Official REST API for Bitrise.io",
        "contact": {
            "name": "Bitrise Support",
            "url": "https://www.bitrise.io/contact",
            "email": "letsconnect@bitrise.io"
        },
        "license": {
            "name": "MIT"
        },
        "version": "0.1"
    },
    "servers": [
        {
            "url": "https://api.bitrise.io/v0.1"
        }
    ],
    "paths": {
        "/addons": {
            "get": {
                "tags": [
                    "addons"
                ],
                "summary": "Get list of available Bitrise addons",
                "description": "List all the available Bitrise addons",
                "operationId": "addons-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AddonsListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/addons/{addon-id}": {
            "get": {
                "tags": [
                    "addons"
                ],
                "summary": "Get a specific Bitrise addon",
                "description": "Show details of a specific Bitrise addon",
                "operationId": "addons-show",
                "parameters": [
                    {
                        "name": "addon-id",
                        "in": "path",
                        "description": "Addon ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AddonsShowResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Get list of the apps",
                "description": "List all the apps available for the authenticated account, including those that are owned by other users or Organizations.",
                "operationId": "app-list",
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Order of the applications: sort them based on when they were created or the time of their last build",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "last_build_at",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first app in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/register": {
            "post": {
                "tags": [
                    "app-setup"
                ],
                "summary": "Add a new app",
                "description": "Add a new app to Bitrise. This is the first step of the app registration process. To successfully set it up, you need to provide the required app parameters: your git provider, the repository URL, the slug of the repository as it appears at the provider, and the slug of the owner of the repository. Read more about the app creation process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).",
                "operationId": "app-create",
                "requestBody": {
                    "description": "App parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AppUploadParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "app"
            }
        },
        "/apps/{app-slug}": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Get a specific app",
                "description": "Get the details of a specific app by providing the app slug. You can get the app slug by calling the [/apps](https://api-docs.bitrise.io/#/application/app-list) endpoint or by opening the app on bitrise.io and copying the slug from the URL.",
                "operationId": "app-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppShowResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/addons": {
            "get": {
                "tags": [
                    "addons"
                ],
                "summary": "Get list of the addons for apps",
                "description": "List all the provisioned addons for the authorized apps",
                "operationId": "addon-list-by-app",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppAddOnsListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/android-keystore-files": {
            "get": {
                "tags": [
                    "android-keystore-file"
                ],
                "summary": "Get a list of the android keystore files",
                "description": "List all the android keystore files that have been uploaded to a specific app.",
                "operationId": "android-keystore-file-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first android keystore file in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of build certificates per page is 50.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "android-keystore-file"
                ],
                "summary": "Create an Android keystore file",
                "description": "Add a new Android keystore file to an app",
                "operationId": "android-keystore-file-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Android keystore file parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AndroidKeystoreFileUploadParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "android-keystore-file"
            }
        },
        "/apps/{app-slug}/avatar-candidates": {
            "post": {
                "tags": [
                    "avatar-candidate"
                ],
                "summary": "Create avatar candidates",
                "description": "Add new avatar candidates to a specific app",
                "operationId": "avatar-candidate-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Avatar candidate parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AvatarCandidateCreateBulkParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AvatarCandidateCreateResponseItems"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "avatar-candidate"
            }
        },
        "/apps/{app-slug}/avatar-candidates/{avatar-slug}": {
            "patch": {
                "tags": [
                    "avatar-candidate"
                ],
                "summary": "Promote an avatar candidate",
                "description": "Promotes an avatar candidate for an app",
                "operationId": "avatar-candidate-promote",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "avatar-slug",
                        "in": "path",
                        "description": "Avatar candidate slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Avatar promote parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AvatarPromoteParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AvatarPromoteResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "avatar-promote-params"
            }
        },
        "/apps/{app-slug}/bitrise.yml": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Get bitrise.yml of a specific app",
                "description": "Get the full `bitrise.yml` configuration of an application, by providing the app slug. It returns the current `bitrise.yml` that is stored on bitrise.io in full, including the trigger map, the different workflows and the Steps.",
                "operationId": "app-config-datastore-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{the bitrise.yml in yml format}",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "app-setup"
                ],
                "summary": "Upload a new bitrise.yml for your application.",
                "description": "Upload a new bitrise.yml for your application.",
                "operationId": "app-config-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "App config parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AppConfigRequestParam"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppConfigRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "app-config"
            }
        },
        "/apps/{app-slug}/branches": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "List the branches of an app's repository",
                "description": "List the existing branches of the repository of a specified Bitrise app.",
                "operationId": "branch-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BranchListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/build-certificates": {
            "get": {
                "tags": [
                    "build-certificate"
                ],
                "summary": "Get a list of the build certificates",
                "description": "List all the build certificates that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.",
                "operationId": "build-certificate-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first build certificate in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of build certificates per page is 50.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildCertificateListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "build-certificate"
                ],
                "summary": "Create a build certificate",
                "description": "Create a temporary pre-signed upload URL for the build certificate and upload the file to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded](https://api-docs.bitrise.io/#/build-certificate/build-certificate-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.",
                "operationId": "build-certificate-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Build certificate parameters such as file name and its file size",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.BuildCertificateUploadParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildCertificateResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "build-certificate"
            }
        },
        "/apps/{app-slug}/build-certificates/{build-certificate-slug}": {
            "get": {
                "tags": [
                    "build-certificate"
                ],
                "summary": "Get a specific build certificate",
                "description": "Retrieve data of a specific build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.",
                "operationId": "build-certificate-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-certificate-slug",
                        "in": "path",
                        "description": "Build certificate slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildCertificateResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "build-certificate"
                ],
                "summary": "Delete a build certificate",
                "description": "Delete an app's build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.",
                "operationId": "build-certificate-delete",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-certificate-slug",
                        "in": "path",
                        "description": "Build certificate slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildCertificateResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "build-certificate"
                ],
                "summary": "Update a build certificate",
                "description": "Update an uploaded build certificate's attributes. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.",
                "operationId": "build-certificate-update",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-certificate-slug",
                        "in": "path",
                        "description": "Build certificate slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Build certificate parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.BuildCertificateUpdateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildCertificateResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "build-certificate"
            }
        },
        "/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded": {
            "post": {
                "tags": [
                    "build-certificate"
                ],
                "summary": "Confirm a build certificate upload",
                "description": "This is the last step of uploading a build certificate to Bitrise. Confirm the build certificate upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.",
                "operationId": "build-certificate-confirm",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-certificate-slug",
                        "in": "path",
                        "description": "Build certificate slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildCertificateResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/build-requests": {
            "get": {
                "tags": [
                    "build-request"
                ],
                "summary": "List the open build requests for an app",
                "description": "List the existing open build requests of a specified Bitrise app",
                "operationId": "build-request-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildRequestListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/build-requests/{build-request-slug}": {
            "patch": {
                "tags": [
                    "build-request"
                ],
                "summary": "Update a build request",
                "description": "Update a specific build request of a specific app",
                "operationId": "build-request-update",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-request-slug",
                        "in": "path",
                        "description": "Build request slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Build request parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.BuildRequestUpdateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildRequestUpdateResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "build-request"
            }
        },
        "/apps/{app-slug}/build-workflows": {
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "List the workflows of an app",
                "description": "List the workflows that were triggered at any time for a given Bitrise app. Note that it might list workflows that are currently not defined in the app's `bitrise.yml` configuration - and conversely, workflows that were never triggered will not be listed even if they are defined in the `bitrise.yml` file.",
                "operationId": "build-workflow-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildWorkflowListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/builds": {
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "List all builds of an app",
                "description": "List all the builds of a specified Bitrise app. Set parameters to filter builds: for example, you can search for builds run with a given workflow or all builds that were triggered by Pull Requests. It returns all the relevant data of the build.",
                "operationId": "build-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Order of builds: sort them based on when they were created or the time when they were triggered",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "running_first",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "branch",
                        "in": "query",
                        "description": "The branch which was built",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflow",
                        "in": "query",
                        "description": "The name of the workflow used for the build",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "commit_message",
                        "in": "query",
                        "description": "The commit message of the build",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trigger_event_type",
                        "in": "query",
                        "description": "The event that triggered the build (push, pull-request, tag)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pull_request_id",
                        "in": "query",
                        "description": "The id of the pull request that triggered the build",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "build_number",
                        "in": "query",
                        "description": "The build number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "List builds run after a given date (Unix Timestamp)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "List builds run before a given date (Unix Timestamp)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first build in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "builds"
                ],
                "summary": "Trigger a new build",
                "description": "Trigger a new build. Specify an app slug and at least one parameter out of three: a git tag or git commit hash, a branch, or a workflow ID. You can also set specific parameters for Pull Request builds and define additional environment variables for your build. [Check out our detailed guide](https://devcenter.bitrise.io/api/build-trigger/).",
                "operationId": "build-trigger",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Build trigger parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.BuildTriggerParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildTriggerRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ],
                "x-codegen-request-body-name": "build_params"
            }
        },
        "/apps/{app-slug}/builds/{build-slug}": {
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "Get a build of a given app",
                "description": "Get the specified build of a given Bitrise app. You need to provide both an app slug and a build slug. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL. The endpoint returns all the relevant data of the build.",
                "operationId": "build-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildShowResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/abort": {
            "post": {
                "tags": [
                    "builds"
                ],
                "summary": "Abort a specific build",
                "description": "Abort a specific build. Set an abort reason with the `abort_reason` parameter. Use the `abort_with_success` parameter to abort a build but still count it as a successful one.",
                "operationId": "build-abort",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Build abort parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.BuildAbortParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildAbortResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ],
                "x-codegen-request-body-name": "build-abort-params"
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/artifacts": {
            "get": {
                "tags": [
                    "build-artifact"
                ],
                "summary": "Get a list of all build artifacts",
                "description": "List all build artifacts that have been generated for an app's build. You can use the created build artifact slugs from the response output to retrieve data of a specific build artifact with the [GET/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-show) endpoint or update a build artifact with the [PATCH/apps](https://api-docs.bitrise.io/#/build-artifact/artifact-update) endpoint.",
                "operationId": "artifact-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first build artifact in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of build artifacts per page is 50.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ArtifactListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}": {
            "get": {
                "tags": [
                    "build-artifact"
                ],
                "summary": "Get a specific build artifact",
                "description": "Retrieve data of a specific build artifact. The response output contains a time-limited download url (expires in 10 minutes) and a public install page URL. You can view the build artifact with both URLs, but the public install page url will not work unless you [enable it](https://devcenter.bitrise.io/tutorials/deploy/bitrise-app-deployment/#enabling-public-page-for-the-app).",
                "operationId": "artifact-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "artifact-slug",
                        "in": "path",
                        "description": "Artifact slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ArtifactShowResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "build-artifact"
                ],
                "summary": "Delete a build artifact",
                "description": "Delete a build artifact of an app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.",
                "operationId": "artifact-delete",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "artifact-slug",
                        "in": "path",
                        "description": "Artifact slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ArtifactDeleteResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "build-artifact"
                ],
                "summary": "Update a build artifact",
                "description": "Update the `is_public_page_enabled` attribute of your app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [GET /apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.",
                "operationId": "artifact-update",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "artifact-slug",
                        "in": "path",
                        "description": "Artifact slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Artifact parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.ArtifactUpdateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ArtifactShowResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "artifact-params"
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/bitrise.yml": {
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "Get the bitrise.yml of a build",
                "description": "Get the bitrise.yml file of one of the builds of a given app. This will return the `bitrise.yml` configuration with which the build ran. You can compare it to [the current bitrise.yml configuration](https://api-docs.bitrise.io/#/application/app-config-datastore-show) of the app.",
                "operationId": "build-bitrise-yml-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{the bitrise.yml in yml format}",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/log": {
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "Get the build log of a build",
                "description": "Get the build log of a specified build of a Bitrise app. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL.",
                "operationId": "build-log",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "build-slug",
                        "in": "path",
                        "description": "Build slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildLogInfoResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/finish": {
            "post": {
                "tags": [
                    "app-setup"
                ],
                "summary": "Save the application at the end of the app registration process",
                "description": "Save the application after registering it on Bitrise and registering an SSH key (and, optionally, adding a webhook). With this endpoint you can define the initial configuration, define application-level environment variables, determine the project type, and set an Organization to be the owner of the app. Read more about the app registration process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).",
                "operationId": "app-finish",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "App finish parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AppFinishParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppFinishRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "app"
            }
        },
        "/apps/{app-slug}/generic-project-files": {
            "get": {
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Get a list of the generic project files",
                "description": "List all the generic project files that have been uploaded to a specific app. Read more in our [Listing the uploaded files of an app](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#listing-the-uploaded-files-of-an-app) guide.",
                "operationId": "generic-project-file-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first generic project file in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of build certificates per page is 50.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Create a generic project file",
                "description": "Create a temporary pre-signed upload URL (expires in 10 minutes) for the generic project file and upload it to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-confirm) endpoint. Read more in our [Creating and uploading files to Generic File Storage](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#creating-and-uploading-files-to-generic-file-storage) guide.",
                "operationId": "generic-project-files-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Generic project file parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.ProjectFileStorageUploadParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "generic-project-file"
            }
        },
        "/apps/{app-slug}/generic-project-files/{generic-project-file-slug}": {
            "get": {
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Get a specific generic project file",
                "description": "Retrieve data of a specific generic project file to check its attributes and optionally modify them with the [PATCH /apps/](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-update) endpoint. Read more in our [Retrieving a specific file's data](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#retrieving-a-specific-files-data) guide.",
                "operationId": "generic-project-file-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "description": "Generic project file slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Delete a generic project file",
                "description": "Delete an app's generic project file. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#deleting-a-file) guide.",
                "operationId": "generic-project-file-delete",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "description": "Generic project file slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Update a generic project file",
                "description": "Update a generic project file's attributes. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Updating an uploaded file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#updating-an-uploaded-file) guide.",
                "operationId": "generic-project-file-update",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "description": "Generic project file slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Generic project file parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "generic-project-file"
            }
        },
        "/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded": {
            "post": {
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Confirm a generic project file upload",
                "description": "This is the last step of uploading a generic project file to Bitrise. Confirm the generic project file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.",
                "operationId": "generic-project-file-confirm",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "description": "Generic project file slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProjectFileStorageResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/outgoing-webhooks": {
            "get": {
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "List the outgoing webhooks of an app",
                "description": "List all the outgoing webhooks registered for a specified Bitrise app. This returns all the relevant data of the webhook, including the slug of the webhook and its URL.",
                "operationId": "outgoing-webhook-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first webhook in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppWebhookListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "Create an outgoing webhook for an app",
                "description": "Create an outgoing webhook for a specified Bitrise app: this can be used to send build events to a specified URL with custom headers. Currently, only build events can trigger outgoing webhooks.",
                "operationId": "outgoing-webhook-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "App webhook creation params",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AppWebhookCreateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppWebhookCreatedResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ],
                "x-codegen-request-body-name": "app-webhook-create-params"
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}": {
            "put": {
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "Update an outgoing webhook of an app",
                "description": "Update an existing outgoing webhook (URL, events, secrets and headers) for a specified Bitrise app. Even if you do not want to change one of the parameters, you still have to provide that parameter as well: simply use its existing value.",
                "operationId": "outgoing-webhook-update",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "app-webhook-slug",
                        "in": "path",
                        "description": "App webhook slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "App webhook update params",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.AppWebhookUpdateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppWebhookResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "app-webhook-update-params"
            },
            "delete": {
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "Delete an outgoing webhook of an app",
                "description": "Delete an existing outgoing webhook for a specified Bitrise app.",
                "operationId": "outgoing-webhook-delete",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "app-webhook-slug",
                        "in": "path",
                        "description": "App webhook slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppWebhookDeletedResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items": {
            "get": {
                "tags": [
                    "webhook-delivery-item"
                ],
                "summary": "List the webhook delivery items of an app",
                "description": "List all the delivery items of an outgoing webhook of a Bitrise application",
                "operationId": "webhook-delivery-item-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "app-webhook-slug",
                        "in": "path",
                        "description": "App webhook slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first delivery item in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.WebhookDeliveryItemShowResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}": {
            "get": {
                "tags": [
                    "webhook-delivery-item"
                ],
                "summary": "Get a specific delivery item of a webhook",
                "description": "Get the specified delivery item of an outgoing webhook of a Bitrise application",
                "operationId": "webhook-delivery-item-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "app-webhook-slug",
                        "in": "path",
                        "description": "App webhook slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "webhook-delivery-item-slug",
                        "in": "path",
                        "description": "Webhook delivery item slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.WebhookDeliveryItemResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver": {
            "post": {
                "tags": [
                    "webhook-delivery-item"
                ],
                "summary": "Re-deliver the webhook delivery items of an app",
                "description": "Re-deliver the delivery item of a specified webhook of a Bitrise application",
                "operationId": "webhook-delivery-item-redeliver",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "app-webhook-slug",
                        "in": "path",
                        "description": "App webhook slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "webhook-delivery-item-slug",
                        "in": "path",
                        "description": "Webhook delivery item slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/provisioning-profiles": {
            "get": {
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Get a list of the provisioning profiles",
                "description": "List all the provisioning profiles that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.",
                "operationId": "provisioning-profile-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first provisioning profile in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProvisionProfileListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Create a provisioning profile",
                "description": "Create a temporary pre-signed upload URL (expires in 10 minutes) for the provisioning profile and upload it to AWS with a simple `curl` request. To complete the upload process, continue with the [POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.",
                "operationId": "provisioning-profile-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provisioning profile parameters such as file name and file size",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.ProvisionProfileUploadParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProvisionProfileResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "provisioning-profile"
            }
        },
        "/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}": {
            "get": {
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Get a specific provisioning profile",
                "description": "Retrieve data of a specific provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.",
                "operationId": "provisioning-profile-show",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "description": "Provisioning profile slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProvisionProfileResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Delete a provisioning profile",
                "description": "Delete an app's provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.",
                "operationId": "provisioning-profile-delete",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "description": "Provisioning profile slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProvisionProfileResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Update a provisioning profile",
                "description": "Update an uploaded provisioning profile's attributes. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.",
                "operationId": "provisioning-profile-update",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "description": "Provisioning profile slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provisioning profile parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.ProvProfileDocumentUpdateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProvisionProfileResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "provisioning-profile"
            }
        },
        "/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded": {
            "post": {
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Confirm a provisioning profile upload",
                "description": "This is the last step of the upload process. Confirm the provisioning profile upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.",
                "operationId": "provisioning-profile-confirm",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "description": "Provisioning profile slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ProvisionProfileResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/register-ssh-key": {
            "post": {
                "tags": [
                    "app-setup"
                ],
                "summary": "Add an SSH-key to a specific app",
                "description": "Add an SSH-key to a specific app. After creating an app, you need to register the SSH key so that Bitrise will be able to access and clone your repository during the build process. This requires the app slug of your newly created app.",
                "operationId": "ssh-key-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SSH key parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.SSHKeyUploadParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.SSHKeyRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ],
                "x-codegen-request-body-name": "ssh-key"
            }
        },
        "/apps/{app-slug}/register-webhook": {
            "post": {
                "tags": [
                    "app-setup"
                ],
                "summary": "Register an incoming webhook for a specific application",
                "description": "[Register an incoming webhook](https://devcenter.bitrise.io/api/incoming-and-outgoing-webhooks/#incoming-webhooks) for a specific application. You can do this during the app registration process or at any other time in an app's life. When calling this endpoint, a webhook is registered at your git provider: this is necessary to automatically trigger builds on Bitrise.",
                "operationId": "app-webhook-create",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.WebhookRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/apps/{app-slug}/test-devices": {
            "get": {
                "tags": [
                    "test-devices"
                ],
                "summary": "List the test devices for an app",
                "description": "List registered test devices of all members of a specified Bitrise app",
                "operationId": "test-device-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.TestDeviceListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    },
                    {
                        "AddonAuthToken": []
                    }
                ]
            }
        },
        "/builds": {
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "List all builds",
                "description": "List all the Bitrise builds that can be accessed with the authenticated account. Filter builds based on their owner, using the owner slug, or the status of the build.",
                "operationId": "build-list-all",
                "parameters": [
                    {
                        "name": "owner_slug",
                        "in": "query",
                        "description": "The slug of the owner of the app or apps",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_on_hold",
                        "in": "query",
                        "description": "Indicates whether the build has started yet (true: the build hasn't started)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first build in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.BuildListAllResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get your profile data",
                "description": "Shows the authenticated users profile data",
                "operationId": "user-profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.UserProfileRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/me/activities": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Get list of Bitrise activity events",
                "description": "List all the Bitrise activity events",
                "operationId": "activity-list",
                "parameters": [
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first activity event in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.ActivityEventListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/me/plan": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "The subscription plan of the user",
                "description": "Get the subscription of the user: the current plan, any pending plans, and the duration of a trial period if applicable",
                "operationId": "user-plan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.UserPlanRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/organizations": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List the organizations that the user is part of",
                "description": "List all Bitrise organizations that the user is part of",
                "operationId": "org-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.OrganizationListRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/organizations/{org-slug}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get a specified organization.",
                "description": "Get a specified Bitrise organization that the user is part of.",
                "operationId": "org-show",
                "parameters": [
                    {
                        "name": "org-slug",
                        "in": "path",
                        "description": "The organization slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.OrganizationRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/organizations/{org-slug}/apps": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Get list of the apps for an organization",
                "description": "List all the available apps owned by a given organization. [Find the organization URL](https://devcenter.bitrise.io/team-management/organizations/org-url/) of the organisations you are part of; be aware that the endpoint will not return any apps if the authenticated account is not a member of the given organisation.",
                "operationId": "app-list-by-organization",
                "parameters": [
                    {
                        "name": "org-slug",
                        "in": "path",
                        "description": "Organization slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Order of applications: sort them based on when they were created or the time of their last build",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "last_build_at",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first app in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/organizations/{organization-slug}/addons": {
            "get": {
                "tags": [
                    "addons"
                ],
                "summary": "Get list of the addons for organization",
                "description": "List all the provisioned addons for organization",
                "operationId": "addon-list-by-organization",
                "parameters": [
                    {
                        "name": "organization-slug",
                        "in": "path",
                        "description": "Organization slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.OwnerAddOnsListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/users/{user-slug}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get a specific user",
                "description": "Show information about a specific user",
                "operationId": "user-show",
                "parameters": [
                    {
                        "name": "user-slug",
                        "in": "path",
                        "description": "User slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.UserProfileRespModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/users/{user-slug}/addons": {
            "get": {
                "tags": [
                    "addons"
                ],
                "summary": "Get list of the addons for user",
                "description": "List all the provisioned addons for the authenticated user",
                "operationId": "addon-list-by-user",
                "parameters": [
                    {
                        "name": "user-slug",
                        "in": "path",
                        "description": "User slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.OwnerAddOnsListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/users/{user-slug}/apple-api-credentials": {
            "get": {
                "tags": [
                    "apple-api-credentials"
                ],
                "summary": "List Apple API credentials for a specific user",
                "description": "List Apple API credentials for a specific Bitrise user",
                "operationId": "apple-api-credential-list",
                "parameters": [
                    {
                        "name": "user-slug",
                        "in": "path",
                        "description": "User slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppleAPICredentialsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/users/{user-slug}/apps": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Get list of the apps for a user",
                "description": "List all the available apps for the given user.  It needs the user slug that you can get from the [GET /me](https://api-docs.bitrise.io/#/user/user-profile) endpoint.",
                "operationId": "app-list-by-user",
                "parameters": [
                    {
                        "name": "user-slug",
                        "in": "path",
                        "description": "User slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Order of applications",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "last_build_at",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "next",
                        "in": "query",
                        "description": "Slug of the first app in the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max number of elements per page (default: 50)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.AppListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        },
        "/v0.1/apps/{app-slug}/avatar-candidates": {
            "get": {
                "tags": [
                    "avatar-candidate"
                ],
                "summary": "Get list of the avatar candidates",
                "description": "List all available avatar candidates for an application",
                "operationId": "avatar-candidate-list",
                "parameters": [
                    {
                        "name": "app-slug",
                        "in": "path",
                        "description": "App slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.FindAvatarCandidateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.StandardErrorRespModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "PersonalAccessToken": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "addons.Addon": {
                "type": "object",
                "properties": {
                    "banner_image": {
                        "type": "string"
                    },
                    "card_header_colors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "developer_links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addons.DeveloperLink"
                        }
                    },
                    "documentation_url": {
                        "type": "string"
                    },
                    "has_ui": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "is_beta": {
                        "type": "boolean"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addons.Plan"
                        }
                    },
                    "platforms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preview_images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "setup_guide": {
                        "$ref": "#/components/schemas/addons.SetupGuide"
                    },
                    "subtitle": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "addons.DeveloperLink": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "addons.Feature": {
                "type": "object",
                "properties": {
                    "available": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string"
                    }
                }
            },
            "addons.Plan": {
                "type": "object",
                "properties": {
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addons.Feature"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    }
                }
            },
            "addons.SetupGuide": {
                "type": "object",
                "properties": {
                    "instructions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addons.SetupInstruction"
                        }
                    },
                    "notification": {
                        "type": "string"
                    }
                }
            },
            "addons.SetupInstruction": {
                "type": "object",
                "properties": {
                    "card_content": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "service.StandardErrorRespModel": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "v0.ActivityEventListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.ActivityEventResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.ActivityEventResponseItemModel": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "event_icon": {
                        "type": "string"
                    },
                    "event_stype": {
                        "type": "string"
                    },
                    "repository_avatar_icon_url": {
                        "type": "string"
                    },
                    "repository_title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "target_path_string": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "v0.AddOnAppResponseItemModel": {
                "type": "object",
                "properties": {
                    "icon": {
                        "type": "string"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/addons.Plan"
                    },
                    "plan_started_at": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "v0.AddonsListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addons.Addon"
                        }
                    }
                }
            },
            "v0.AddonsShowResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/addons.Addon"
                    }
                }
            },
            "v0.AndroidKeystoreFileUploadParams": {
                "required": [
                    "alias",
                    "password",
                    "private_key_password",
                    "upload_file_name",
                    "upload_file_size"
                ],
                "type": "object",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "private_key_password": {
                        "type": "string"
                    },
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    }
                }
            },
            "v0.AppAddOnResponseItemModel": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "documentation_url": {
                        "type": "string"
                    },
                    "has_ui": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "is_beta": {
                        "type": "boolean"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/addons.Plan"
                    },
                    "setup_guide": {
                        "$ref": "#/components/schemas/addons.SetupGuide"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "v0.AppAddOnsListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.AppAddOnResponseItemModel"
                        }
                    }
                }
            },
            "v0.AppConfigRequestParam": {
                "required": [
                    "app_config_datastore_yaml"
                ],
                "type": "object",
                "properties": {
                    "app_config_datastore_yaml": {
                        "type": "string"
                    }
                }
            },
            "v0.AppConfigRespModel": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "v0.AppFinishParams": {
                "required": [
                    "project_type",
                    "stack_id"
                ],
                "type": "object",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "Which config to use `default-android-config`, `default-cordova-config`, `default-fastlane-config`, `default-ionic-config`, `default-ios-config`,`default-macos-config`, `default-react-native-config`, `default-xamarin-config`, `other-config` (default if parameter is not speficied)"
                    },
                    "envs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Environment variables for the application workflows, e.g. {\"env1\":\"val1\",\"env2\":\"val2\"}"
                    },
                    "mode": {
                        "type": "string",
                        "description": "config specification mode, has to be specified with `manual` value"
                    },
                    "organization_slug": {
                        "type": "string",
                        "description": "The slug of the organization, who will be the owner of the application, if it's not specified, then the authenticated user will be the owner"
                    },
                    "project_type": {
                        "type": "string",
                        "description": "The type of your project (`android`, `ios`, `cordova`, `other`, `xamarin`, `macos`, `ionic`, `react-native`, `fastlane`, null)"
                    },
                    "stack_id": {
                        "type": "string",
                        "description": "The id of the stack the application will be built (these can be found in the [system report](https://github.com/bitrise-io/bitrise.io/tree/master/system_reports) file names)"
                    }
                }
            },
            "v0.AppFinishRespModel": {
                "type": "object",
                "properties": {
                    "branch_name": {
                        "type": "string"
                    },
                    "build_trigger_token": {
                        "type": "string"
                    },
                    "is_webhook_auto_reg_supported": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "v0.AppListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.AppResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.AppRespModel": {
                "type": "object",
                "properties": {
                    "slug": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "v0.AppResponseItemModel": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "type": "string"
                    },
                    "is_disabled": {
                        "type": "boolean"
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/v0.OwnerAccountResponseModel"
                    },
                    "project_type": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "repo_owner": {
                        "type": "string"
                    },
                    "repo_slug": {
                        "type": "string"
                    },
                    "repo_url": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "v0.AppShowResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.AppResponseItemModel"
                    }
                }
            },
            "v0.AppUploadParams": {
                "required": [
                    "git_owner",
                    "git_repo_slug",
                    "is_public",
                    "provider",
                    "repo_url",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "git_owner": {
                        "type": "string",
                        "description": "The slug of the owner of the repository at the git provider"
                    },
                    "git_repo_slug": {
                        "type": "string",
                        "description": "The slug of the repository at the git provider"
                    },
                    "is_public": {
                        "type": "boolean",
                        "description": "If `true` then the repository visibility setting will be public, in case of `false` it will be private"
                    },
                    "provider": {
                        "type": "string",
                        "description": "The git provider you are using, it can be `github`, `bitbucket`, `gitlab`, `gitlab-self-hosted` or `custom`"
                    },
                    "repo_url": {
                        "type": "string",
                        "description": "The URL of your repository"
                    },
                    "type": {
                        "type": "string",
                        "description": "It has to be provided by legacy reasons and has to have the `git` value"
                    }
                }
            },
            "v0.AppWebhookCreateParams": {
                "required": [
                    "events",
                    "secret",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "headers": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "v0.AppWebhookCreatedResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.AppWebhookResponseItemModel"
                    }
                }
            },
            "v0.AppWebhookDeletedResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.AppWebhookResponseItemModel"
                    }
                }
            },
            "v0.AppWebhookListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.AppWebhookResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.AppWebhookResponseItemModel": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "headers": {
                        "type": "string"
                    },
                    "registered_by_addon": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "v0.AppWebhookResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.AppWebhookResponseItemModel"
                    }
                }
            },
            "v0.AppWebhookUpdateParams": {
                "required": [
                    "events",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "events": {
                        "type": "string"
                    },
                    "headers": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "v0.AppleAPICredentialResponseItem": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "issuer_id": {
                        "type": "string"
                    },
                    "key_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                }
            },
            "v0.AppleAPICredentialsListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.AppleAPICredentialResponseItem"
                        }
                    }
                }
            },
            "v0.ArtifactDeleteResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.ArtifactResponseItemModel"
                    }
                }
            },
            "v0.ArtifactListElementResponseModel": {
                "type": "object",
                "properties": {
                    "artifact_meta": {
                        "type": "string"
                    },
                    "artifact_type": {
                        "type": "string"
                    },
                    "file_size_bytes": {
                        "type": "integer"
                    },
                    "is_public_page_enabled": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "v0.ArtifactListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.ArtifactListElementResponseModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.ArtifactResponseItemModel": {
                "type": "object",
                "properties": {
                    "artifact_meta": {
                        "type": "string"
                    },
                    "artifact_type": {
                        "type": "string"
                    },
                    "expiring_download_url": {
                        "type": "string"
                    },
                    "file_size_bytes": {
                        "type": "integer"
                    },
                    "is_public_page_enabled": {
                        "type": "boolean"
                    },
                    "public_install_page_url": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "v0.ArtifactShowResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.ArtifactResponseItemModel"
                    }
                }
            },
            "v0.ArtifactUpdateParams": {
                "required": [
                    "is_public_page_enabled"
                ],
                "type": "object",
                "properties": {
                    "is_public_page_enabled": {
                        "type": "boolean"
                    }
                }
            },
            "v0.AvatarCandidateCreateBulkParams": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.AvatarCandidateCreateParams"
                }
            },
            "v0.AvatarCandidateCreateParams": {
                "required": [
                    "filename",
                    "filesize"
                ],
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "filesize": {
                        "type": "integer"
                    }
                }
            },
            "v0.AvatarCandidateCreateResponseItem": {
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "filesize": {
                        "type": "integer"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "upload_url": {
                        "type": "string"
                    }
                }
            },
            "v0.AvatarCandidateCreateResponseItems": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.AvatarCandidateCreateResponseItem"
                }
            },
            "v0.AvatarPromoteParams": {
                "required": [
                    "is_promoted"
                ],
                "type": "object",
                "properties": {
                    "is_promoted": {
                        "type": "boolean"
                    }
                }
            },
            "v0.AvatarPromoteResponseItemModel": {
                "type": "object",
                "properties": {
                    "is_candidate": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    }
                }
            },
            "v0.AvatarPromoteResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.AvatarPromoteResponseItemModel"
                    }
                }
            },
            "v0.BranchListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v0.BuildAbortParams": {
                "required": [
                    "abort_reason",
                    "abort_with_success",
                    "skip_notifications"
                ],
                "type": "object",
                "properties": {
                    "abort_reason": {
                        "type": "string"
                    },
                    "abort_with_success": {
                        "type": "boolean"
                    },
                    "skip_notifications": {
                        "type": "boolean"
                    }
                }
            },
            "v0.BuildAbortResponseModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildCertificateListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.BuildCertificateResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.BuildCertificateResponseItemModel": {
                "type": "object",
                "properties": {
                    "certificate_password": {
                        "type": "string"
                    },
                    "download_url": {
                        "type": "string"
                    },
                    "is_expose": {
                        "type": "boolean"
                    },
                    "is_protected": {
                        "type": "boolean"
                    },
                    "processed": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    },
                    "upload_url": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildCertificateResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.BuildCertificateResponseItemModel"
                    }
                }
            },
            "v0.BuildCertificateUpdateParams": {
                "type": "object",
                "properties": {
                    "certificate_password": {
                        "type": "string"
                    },
                    "is_expose": {
                        "type": "boolean"
                    },
                    "is_protected": {
                        "type": "boolean"
                    },
                    "processed": {
                        "type": "boolean"
                    }
                }
            },
            "v0.BuildCertificateUploadParams": {
                "required": [
                    "upload_file_name",
                    "upload_file_size"
                ],
                "type": "object",
                "properties": {
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    }
                }
            },
            "v0.BuildListAllResponseItemModel": {
                "type": "object",
                "properties": {
                    "abort_reason": {
                        "type": "string"
                    },
                    "branch": {
                        "type": "string"
                    },
                    "build_number": {
                        "type": "integer"
                    },
                    "commit_hash": {
                        "type": "string"
                    },
                    "commit_message": {
                        "type": "string"
                    },
                    "commit_view_url": {
                        "type": "string"
                    },
                    "environment_prepare_finished_at": {
                        "type": "string"
                    },
                    "finished_at": {
                        "type": "string"
                    },
                    "is_on_hold": {
                        "type": "boolean"
                    },
                    "machine_type_id": {
                        "type": "string"
                    },
                    "original_build_params": {
                        "type": "string"
                    },
                    "pull_request_id": {
                        "type": "integer"
                    },
                    "pull_request_target_branch": {
                        "type": "string"
                    },
                    "pull_request_view_url": {
                        "type": "string"
                    },
                    "repository": {
                        "$ref": "#/components/schemas/v0.AppResponseItemModel"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "stack_identifier": {
                        "type": "string"
                    },
                    "started_on_worker_at": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "triggered_at": {
                        "type": "string"
                    },
                    "triggered_by": {
                        "type": "string"
                    },
                    "triggered_workflow": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildListAllResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.BuildListAllResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.BuildListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.BuildResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.BuildLogChunkItemResponseModel": {
                "type": "object",
                "properties": {
                    "chunk": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer"
                    }
                }
            },
            "v0.BuildLogInfoResponseModel": {
                "type": "object",
                "properties": {
                    "expiring_raw_log_url": {
                        "type": "string"
                    },
                    "generated_log_chunks_num": {
                        "type": "integer"
                    },
                    "is_archived": {
                        "type": "boolean"
                    },
                    "log_chunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.BuildLogChunkItemResponseModel"
                        }
                    },
                    "timestamp": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildParamsEnvironment": {
                "type": "object",
                "properties": {
                    "is_expand": {
                        "type": "boolean"
                    },
                    "mapped_to": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildRequestListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.BuildRequestResponseItemModel"
                        }
                    }
                }
            },
            "v0.BuildRequestResponseItemModel": {
                "type": "object",
                "properties": {
                    "build_params": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "pull_request_url": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildRequestUpdateParams": {
                "required": [
                    "is_approved"
                ],
                "type": "object",
                "properties": {
                    "is_approved": {
                        "type": "boolean"
                    }
                }
            },
            "v0.BuildRequestUpdateResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.BuildRequestResponseItemModel"
                    }
                }
            },
            "v0.BuildResponseItemModel": {
                "type": "object",
                "properties": {
                    "abort_reason": {
                        "type": "string"
                    },
                    "branch": {
                        "type": "string"
                    },
                    "build_number": {
                        "type": "integer"
                    },
                    "commit_hash": {
                        "type": "string"
                    },
                    "commit_message": {
                        "type": "string"
                    },
                    "commit_view_url": {
                        "type": "string"
                    },
                    "environment_prepare_finished_at": {
                        "type": "string"
                    },
                    "finished_at": {
                        "type": "string"
                    },
                    "is_on_hold": {
                        "type": "boolean"
                    },
                    "machine_type_id": {
                        "type": "string"
                    },
                    "original_build_params": {
                        "type": "string"
                    },
                    "pull_request_id": {
                        "type": "integer"
                    },
                    "pull_request_target_branch": {
                        "type": "string"
                    },
                    "pull_request_view_url": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "stack_identifier": {
                        "type": "string"
                    },
                    "started_on_worker_at": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "triggered_at": {
                        "type": "string"
                    },
                    "triggered_by": {
                        "type": "string"
                    },
                    "triggered_workflow": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildShowResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.BuildResponseItemModel"
                    }
                }
            },
            "v0.BuildTriggerParams": {
                "type": "object",
                "properties": {
                    "build_params": {
                        "$ref": "#/components/schemas/v0.BuildTriggerParamsBuildParams"
                    },
                    "hook_info": {
                        "$ref": "#/components/schemas/v0.BuildTriggerParamsHookInfo"
                    }
                }
            },
            "v0.BuildTriggerParamsBuildParams": {
                "type": "object",
                "properties": {
                    "branch": {
                        "type": "string"
                    },
                    "branch_dest": {
                        "type": "string"
                    },
                    "branch_dest_repo_owner": {
                        "type": "string"
                    },
                    "branch_repo_owner": {
                        "type": "string"
                    },
                    "build_request_slug": {
                        "type": "string"
                    },
                    "commit_hash": {
                        "type": "string"
                    },
                    "commit_message": {
                        "type": "string"
                    },
                    "commit_paths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.CommitPaths"
                        }
                    },
                    "diff_url": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.BuildParamsEnvironment"
                        }
                    },
                    "pull_request_author": {
                        "type": "string"
                    },
                    "pull_request_head_branch": {
                        "type": "string"
                    },
                    "pull_request_id": {
                        "type": "object",
                        "properties": {}
                    },
                    "pull_request_merge_branch": {
                        "type": "string"
                    },
                    "pull_request_repository_url": {
                        "type": "string"
                    },
                    "skip_git_status_report": {
                        "type": "boolean"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "workflow_id": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildTriggerParamsHookInfo": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Should be \"bitrise\"",
                        "example": "bitrise"
                    }
                }
            },
            "v0.BuildTriggerRespModel": {
                "type": "object",
                "properties": {
                    "build_number": {
                        "type": "integer"
                    },
                    "build_slug": {
                        "type": "string"
                    },
                    "build_url": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "triggered_workflow": {
                        "type": "string"
                    }
                }
            },
            "v0.BuildWorkflowListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v0.CommitPaths": {
                "type": "object",
                "properties": {
                    "added": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "modified": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removed": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v0.FindAvatarCandidateResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.FindAvatarCandidateResponseItem"
                        }
                    }
                }
            },
            "v0.FindAvatarCandidateResponseItem": {
                "type": "object",
                "properties": {
                    "download_url": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                }
            },
            "v0.OrganizationDataModel": {
                "type": "object",
                "properties": {
                    "avatar_icon_url": {
                        "type": "string"
                    },
                    "concurrency_count": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.OrganizationOwner"
                        }
                    },
                    "slug": {
                        "type": "string"
                    }
                }
            },
            "v0.OrganizationListRespModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.OrganizationDataModel"
                        }
                    }
                }
            },
            "v0.OrganizationOwner": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "v0.OrganizationRespModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.OrganizationDataModel"
                    }
                }
            },
            "v0.OwnerAccountResponseModel": {
                "type": "object",
                "properties": {
                    "account_type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                }
            },
            "v0.OwnerAddOnResponseItemModel": {
                "type": "object",
                "properties": {
                    "apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.AddOnAppResponseItemModel"
                        }
                    },
                    "documentation_url": {
                        "type": "string"
                    },
                    "has_ui": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "is_beta": {
                        "type": "boolean"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "v0.OwnerAddOnsListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.OwnerAddOnResponseItemModel"
                        }
                    }
                }
            },
            "v0.PagingResponseModel": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "description": "Next is the \"anchor\" for pagination. This value should be passed to the same endpoint\nto get the next page. Empty/not included if there's no \"next\" page.\nStop paging when there's no \"Next\" item in the response!"
                    },
                    "page_item_limit": {
                        "type": "integer",
                        "description": "PageItemLimit - per-page item count. A given page might include\nless items if there's not enough items. This value is the \"max item count per page\"."
                    },
                    "total_item_count": {
                        "type": "integer",
                        "description": "TotalItemCount - total item count, through \"all pages\""
                    }
                }
            },
            "v0.PlanDataModel": {
                "type": "object",
                "properties": {
                    "container_count": {
                        "type": "integer"
                    },
                    "expires_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    }
                }
            },
            "v0.ProjectFileStorageDocumentUpdateParams": {
                "type": "object",
                "properties": {
                    "exposed_meta_datastore": {
                        "type": "string"
                    },
                    "is_expose": {
                        "type": "boolean"
                    },
                    "is_protected": {
                        "type": "boolean"
                    },
                    "processed": {
                        "type": "boolean"
                    },
                    "user_env_key": {
                        "type": "string"
                    }
                }
            },
            "v0.ProjectFileStorageListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.ProjectFileStorageResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.ProjectFileStorageResponseItemModel": {
                "type": "object",
                "properties": {
                    "download_url": {
                        "type": "string"
                    },
                    "exposed_meta_datastore": {
                        "type": "string"
                    },
                    "is_expose": {
                        "type": "boolean"
                    },
                    "is_protected": {
                        "type": "boolean"
                    },
                    "processed": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    },
                    "upload_url": {
                        "type": "string"
                    },
                    "user_env_key": {
                        "type": "string"
                    }
                }
            },
            "v0.ProjectFileStorageResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.ProjectFileStorageResponseItemModel"
                    }
                }
            },
            "v0.ProjectFileStorageUploadParams": {
                "required": [
                    "upload_file_name",
                    "upload_file_size",
                    "user_env_key"
                ],
                "type": "object",
                "properties": {
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    },
                    "user_env_key": {
                        "type": "string"
                    }
                }
            },
            "v0.ProvProfileDocumentUpdateParams": {
                "type": "object",
                "properties": {
                    "is_expose": {
                        "type": "boolean"
                    },
                    "is_protected": {
                        "type": "boolean"
                    },
                    "processed": {
                        "type": "boolean"
                    }
                }
            },
            "v0.ProvisionProfileListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.ProvisionProfileResponseItemModel"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/v0.PagingResponseModel"
                    }
                }
            },
            "v0.ProvisionProfileResponseItemModel": {
                "type": "object",
                "properties": {
                    "download_url": {
                        "type": "string"
                    },
                    "is_expose": {
                        "type": "boolean"
                    },
                    "is_protected": {
                        "type": "boolean"
                    },
                    "processed": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    },
                    "upload_url": {
                        "type": "string"
                    }
                }
            },
            "v0.ProvisionProfileResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.ProvisionProfileResponseItemModel"
                    }
                }
            },
            "v0.ProvisionProfileUploadParams": {
                "required": [
                    "upload_file_name",
                    "upload_file_size"
                ],
                "type": "object",
                "properties": {
                    "upload_file_name": {
                        "type": "string"
                    },
                    "upload_file_size": {
                        "type": "integer"
                    }
                }
            },
            "v0.SSHKeyRespModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            },
            "v0.SSHKeyUploadParams": {
                "required": [
                    "auth_ssh_private_key",
                    "auth_ssh_public_key"
                ],
                "type": "object",
                "properties": {
                    "auth_ssh_private_key": {
                        "type": "string",
                        "description": "The private part of the SSH key you would like to use"
                    },
                    "auth_ssh_public_key": {
                        "type": "string",
                        "description": "The public part of the SSH key you would like to use"
                    },
                    "is_register_key_into_provider_service": {
                        "type": "boolean",
                        "description": "If it's set to true, the provided SSH key will be registered at the provider of the application"
                    }
                }
            },
            "v0.TestDeviceListResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.TestDeviceResponseItemModel"
                        }
                    }
                }
            },
            "v0.TestDeviceResponseItemModel": {
                "type": "object",
                "properties": {
                    "device_id": {
                        "type": "string"
                    },
                    "device_type": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    }
                }
            },
            "v0.UserPlanDataModel": {
                "type": "object",
                "properties": {
                    "current_plan": {
                        "$ref": "#/components/schemas/v0.PlanDataModel"
                    },
                    "pending_plan": {
                        "$ref": "#/components/schemas/v0.PlanDataModel"
                    },
                    "trial_expires_at": {
                        "type": "string"
                    }
                }
            },
            "v0.UserPlanRespModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.UserPlanDataModel"
                    }
                }
            },
            "v0.UserProfileDataModel": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "data_id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "has_used_organization_trial": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "unconfirmed_email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "v0.UserProfileRespModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.UserProfileDataModel"
                    }
                }
            },
            "v0.WebhookDeliveryItemResponseModel": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "request_headers": {
                        "type": "string"
                    },
                    "request_payload": {
                        "type": "string"
                    },
                    "request_url": {
                        "type": "string"
                    },
                    "response_body": {
                        "type": "string"
                    },
                    "response_headers": {
                        "type": "string"
                    },
                    "response_http_status": {
                        "type": "string"
                    },
                    "response_seconds": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                }
            },
            "v0.WebhookDeliveryItemShowResponseModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/v0.WebhookDeliveryItemResponseModel"
                    }
                }
            },
            "v0.WebhookRespModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "AddonAuthToken": {
                "type": "apiKey",
                "name": "Bitrise-Addon-Auth-Token",
                "in": "header"
            },
            "PersonalAccessToken": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}
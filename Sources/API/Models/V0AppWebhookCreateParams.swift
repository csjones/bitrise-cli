//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//
// Template used API+CLI
// https://github.com/csjones/SwagGen-templates
//

import Foundation

public class V0AppWebhookCreateParams: APIModel {

    public var events: [String]

    public var secret: String

    public var url: String

    public var headers: String?

    public init(events: [String], secret: String, url: String, headers: String? = nil) {
        self.events = events
        self.secret = secret
        self.url = url
        self.headers = headers
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        events = try container.decodeArray("events")
        secret = try container.decode("secret")
        url = try container.decode("url")
        headers = try container.decodeIfPresent("headers")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(events, forKey: "events")
        try container.encode(secret, forKey: "secret")
        try container.encode(url, forKey: "url")
        try container.encodeIfPresent(headers, forKey: "headers")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? V0AppWebhookCreateParams else { return false }
      guard self.events == object.events else { return false }
      guard self.secret == object.secret else { return false }
      guard self.url == object.url else { return false }
      guard self.headers == object.headers else { return false }
      return true
    }

    public static func == (lhs: V0AppWebhookCreateParams, rhs: V0AppWebhookCreateParams) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
